<?xml version="1.0"?>
<!DOCTYPE project [
	<!ENTITY properties SYSTEM "file:../../xmls/properties.xml">
	<!ENTITY paths  SYSTEM "file:../../xmls/path_refs.xml">
]>
<project name="subversion" basedir="." default="redeploy">
	&properties;
	&paths;

	<!-- Project settings -->
	<property name="project.distname" value="ihs"/>

	<taskdef resource="net/sf/antcontrib/antlib.xml">
		<classpath>
			<pathelement location="lib/ant-contrib.jar"/>
		</classpath>
	</taskdef>

	<taskdef name="deploy"
   		classname="org.apache.catalina.ant.DeployTask">
		<classpath>
			<pathelement location="${install.tomcatdir}/server/lib/[catalina-ant5].jar"/>
		</classpath>
	</taskdef>

   	<taskdef name="undeploy"
		classname="org.apache.catalina.ant.UndeployTask">
		<classpath>
			<pathelement location="${install.tomcatdir}/server/lib/[catalina-ant5].jar"/>
		</classpath>
	</taskdef>

	<!-- Local system paths -->
	<property file="${basedir}/build.properties"/>
	<property name="webroot.dir" value="${basedir}/WebContent"/>
	<property name="webinf.dir" value="${webroot.dir}/WEB-INF"/>
	<property name="build.dir" value="build"/>

	<!-- Check timestamp on files -->
	<target name="prepare">
			<tstamp/>
	</target>

	<!-- Copy any resource or configuration files -->
	<target name="resources">
			<copy todir="${webinf.dir}/classes" includeEmptyDirs="no">
			    <fileset dir="src">
			    <patternset>
			        <include name="**/*.conf"/>
			        <include name="**/*.properties"/>
			        <include name="**/*.xml"/>
			    </patternset>
			    </fileset>
			</copy>
	</target>
	
	<!-- Normal build of application -->
	<target name="compile" depends="prepare,resources">
			<javac srcdir="src" destdir="${webinf.dir}/classes">
			    <classpath refid="classpath"/>
			</javac>
	</target>

	<!-- Remove classes directory for clean build -->
	<target name="clean"
		description="Prepare for clean build">
		<delete dir="${webinf.dir}/classes"/>
		<mkdir  dir="${webinf.dir}/classes"/>
		<delete dir="${build.dir}"/>
		<mkdir  dir="${build.dir}"/>
	</target>

	<!-- Build entire project -->
	<target name="build" depends="prepare,compile"/>
	<target name="rebuild" depends="clean,prepare,compile"/>
	<target name="cc">
		<exec executable="svn">
			<arg line="up --non-interactive"/>
		</exec>
		<antcall target="rebuild"/>
	</target>

	<!-- Create binary distribution -->
	<target name="war" depends="build">
		<mkdir dir="${build.dir}"/>
		<war
			basedir="${webroot.dir}"
			warfile="${build.dir}/${project.distname}.war"
			webxml="${webinf.dir}/web.xml">
			<exclude name="WEB-INF/${build.dir}/**"/>
			<exclude name="WEB-INF/src/**"/>
			<exclude name="WEB-INF/web.xml"/>
		 </war>
	</target>

	<!-- Create binary distribution -->
	<target name="jar" depends="build">
		<mkdir dir="${build.dir}"/>
		<jar
			basedir="${webinf.dir}/classes"
			jarfile="${build.dir}/${project.distname}-adapters.jar">
			<include name="**/com/foo_baz/ihs/adapters/"/>
		 </jar>
	</target>

	<target name="deploy-to-dir" depends="war">
		<mkdir dir="${install.distdir}${install.prefix}"/>
		<mkdir dir="${install.distdir}${install.sharedir}"/>
		<mkdir dir="${install.distdir}${install.tomcatdir}"/>
		<mkdir dir="${install.distdir}${install.webappsdir}"/>
		<mkdir dir="${install.distdir}${install.docdir}"/>
		<mkdir dir="${install.distdir}${install.docdir}/${project.distname}-${project.version}"/>
		<delete file="${install.distdir}${install.webappsdir}/${project.distname}.war"/>
		<delete dir="${install.distdir}${install.webappsdir}/${project.distname}"/>
		<copy file="${build.dir}/${project.distname}.war" todir="${install.distdir}${install.webappsdir}"/>
		<copy todir="${install.distdir}${install.docdir}/${project.distname}-${project.version}">
			<fileset dir="." includes="**/README*">
				<depth max="1"/>
			</fileset>
			<fileset dir="." includes="**/INSTALL*">
				<depth max="1"/>
			</fileset>	
			<fileset dir="." includes="**/*.sql">
				<depth max="1"/>
			</fileset>
		</copy>
		<copy todir="${install.distdir}${install.docdir}/${project.distname}-${project.version}/pl.html">
			<fileset dir="doc/pl.html"/>
		</copy>
		<copy todir="${install.distdir}${install.docdir}/${project.distname}-${project.version}/pl.rtf">
			<fileset dir="doc/pl.rtf"/>
		</copy>
		<copy todir="${install.distdir}${install.docdir}/${project.distname}-${project.version}/en.html">
			<fileset dir="doc/en.html"/>
		</copy>
		<copy todir="${install.distdir}${install.docdir}/${project.distname}-${project.version}/en.rtf">
			<fileset dir="doc/en.rtf"/>
		</copy>
		<copy todir="${install.distdir}${install.docdir}/${project.distname}-${project.version}/imgs">
			<fileset dir="doc/imgs"/>
		</copy>
		<copy file="VERSION" todir="${install.distdir}${install.docdir}/${project.distname}-${project.version}"/>
	</target>

	<target name="install" depends="deploy-to-dir">
	</target>

	<target name="pkg-tar">
		<delete dir="${tmp.dir}"/>
		<mkdir dir="${tmp.dir}"/>
		<exec executable="svn">
			<arg value="export"/>
			<arg value="."/>
			<arg value="${tmp.dir}/${project.distname}-${project.version}"/>
		</exec>
		<exec executable="sed" 
			input="${tmp.dir}/${project.distname}-${project.version}/pkg/rpm/${project.distname}.spec.in"
			output="${tmp.dir}/${project.distname}-${project.version}/pkg/rpm/${project.distname}.spec">
			<arg value="-e"/>
			<arg value="s/@VERSION@/${project.version}/"/>
		</exec>
		<tar destfile="${tmp.dir}/${project.distname}-${project.version}.tar" 
			basedir="${tmp.dir}"/>
	</target>
	
	<target name="pkg-tgz" depends="pkg-tar">
		<gzip src="${tmp.dir}/${project.distname}-${project.version}.tar" 
			destfile="${tmp.dir}/${project.distname}-${project.version}.tar.gz"/>
	</target>

	<target name="pkg-rpm" depends="pkg-tgz">
		<exec executable="rpmbuild">
			<arg value="-ta"/>
			<arg value="${tmp.dir}/${project.distname}-${project.version}.tar.gz"/>
		</exec>
	</target>

	<target name="deploy" depends="war" description="Deploy to a server">
		<deploy url="${manager.url}" username="${username}"
			password="${password}" path="/${project.distname}"
			war="file:${build.dir}/${project.distname}.war"/>
	</target>
	
	<target name="undeploy" description="Undeploy from a server">
		<undeploy url="${manager.url}" username="${username}"
			password="${password}" path="/${project.distname}"/>
	</target>
	
	<target name="try.undeploy" description="Call the undeploy task (which may fail).">
		<trycatch>
			<try>
				<ant target="undeploy"/>
			</try>
			<catch/>
		</trycatch>
	</target>
	
	<target name="redeploy" depends="try.undeploy,deploy"
		description="Undeploy and deploy web application"></target>
</project>
