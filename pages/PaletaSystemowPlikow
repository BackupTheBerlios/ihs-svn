Linux obsługuje kilka typów systemów plików. Najważniejszymi z nich
są:

'''minix'''

       Najstarszy, uważany za najbardziej niezawodny, jednak posiada
       on znaczne ograniczenia (brakuje niektórych znaczników czasu,
       nazwy plików mogą mieć maxymalnie 30 znaków, system plików może
       mieć co najwyżej 64 MB ).

'''xia'''

       Zmodyfikowana wersja systemu minix, w której zostały
       podniesione limity: maxymalnej długości nazwy, oraz rozmiaru
       systemu plików. Żadne nowości nie zostały wprowadzone. Nie jest
       zbyt popularny, jednak istnieją dowody, iż działa całkiem
       dobrze.

'''ext3'''
       W skrócie jest to system plików ext2 wzbogacony o dziennik transakcji.

'''ext2'''

       Najbogatszy w możliwości system plików Linuxa, aktualnie jest
       najbardziej popularny. Zaprojektowany z myślą o zgodności
       wzwyż, dzięki czemu powstanie nowej wersji nie oznacza potrzeby
       konwersji.

'''ext'''

       Starsza wersja ext2, nie jest zgodna wzwyż. Aktualnie nie
       używany, większość ludzi używa ext2.

'''Powstające systemy'''

       Aktualnie powstaje kilka systemów 'z kartoteką', ich cechami są
       szybkość operacji na dużej ilości plików, oraz algorytmy
       obsługujące, które pozwalają na samoczynne naprawianie się
       systemu w czasie pracy. Takimi systemami są m.in.: XFS, ReiserFS, Ext3

Jądro Linuxa potrafi (jeżeli tak je skompilowano) obsłużyć systemy
plików obcego pochodzenia. Systemom takim często brakuje pewnych cech
znanych z rozwiązań rdzennych dla Unixa, czasami posiadają one dziwne
ograniczenia.

'''msdos'''

       Kompatybliny z MS-DOS (OS/2 i Windows NT) system plików FAT.

'''usmdos'''

       Rozszerzona wersja systemu msdos, która umożliwia tworzyć
       długie nazwy plików, ustanawiać właścicieli, prawa dostępu,
       łącza, oraz pliki urządzeń. Dzięki niemu zwykły system plików
       msdos zyskuje cechy znane w środowisku Unix, oraz umożliwia
       zainstalowanie Linuxa na partycji MS-DOS.

'''iso9660'''

       Statdardowy system plików płyt CD-ROM; popularne rozszerzenie
       "Rock Ridge" rozpoznawane jest automatycznie.

'''nfs'''

       Sieciowy System Plików Suna umożliwia dzielenie systemów plików
       poprzez sieć, umożliwia tworzenie bezdyskowych stacji, itp.

'''hpfs'''

       System plików OS/2.

'''sysv'''

       Używany przez SystemV/386, Coherenta i Xenixa.

Wybór systemu plików często podyktowany jest sprawą kompatybilności.
Jeżeli musisz możesz wykorzystywać te systemy, jednak w przypadku gdy
kompatybilność nie jest wymagana najlepiej wybrać ext2, ponieważ
posiada on wszelkie potrzebne możliwości i do tego jest wydajny.

Istnieje również system plików proc, najczęściej jest on dostępny
poprzez katalog /proc, nie jest to rzeczywisty system plików - jest to
specjalne rozwiązanie pozwalające sprawdzać i modyfikować, niektóre
parametry jądra podczas pracy systemu. Takie podejście umożliwia wgląd
w jądro za pomocą zwykłych narzędzi do manipulacji plikami. Dla
przykładu aby odczytać aktualną listę procesów można zrobić coś
takiego:
{{{
$ ls -l /proc
total 0
dr-xr-xr-x   4 root     root            0 Jan 31 20:37 1
dr-xr-xr-x   4 liw      users           0 Jan 31 20:37 63
dr-xr-xr-x   4 liw      users           0 Jan 31 20:37 94
dr-xr-xr-x   4 liw      users           0 Jan 31 20:37 95
dr-xr-xr-x   4 root     users           0 Jan 31 20:37 98
dr-xr-xr-x   4 liw      users           0 Jan 31 20:37 99
-r--r--r--   1 root     root            0 Jan 31 20:37 devices
-r--r--r--   1 root     root            0 Jan 31 20:37 dma
-r--r--r--   1 root     root            0 Jan 31 20:37 filesystems
-r--r--r--   1 root     root            0 Jan 31 20:37 interrupts
-r--------   1 root     root      8654848 Jan 31 20:37 kcore
-r--r--r--   1 root     root            0 Jan 31 11:50 kmsg
-r--r--r--   1 root     root            0 Jan 31 20:37 ksyms
-r--r--r--   1 root     root            0 Jan 31 11:51 loadavg
-r--r--r--   1 root     root            0 Jan 31 20:37 meminfo
-r--r--r--   1 root     root            0 Jan 31 20:37 modules
dr-xr-xr-x   2 root     root            0 Jan 31 20:37 net
dr-xr-xr-x   4 root     root            0 Jan 31 20:37 self
-r--r--r--   1 root     root            0 Jan 31 20:37 stat
-r--r--r--   1 root     root            0 Jan 31 20:37 uptime
-r--r--r--   1 root     root            0 Jan 31 20:37 version
$
}}}

(Pokaże to kilka dodatkowych plików, które nie odpowiadają procesom.
Powyższy przykład został skrócony.)

Zapamiętaj, że pomimo swej nazwy "system plików" nie potrzeba dla
niego żadnego miejsca (oprócz miejsca na katalog /proc), niektóre z
plików posiadają rozmiar różny od zera, jest fikcyjny tak samo jak
cały system plików - stanowi część informacji dostarczanej przez
jądro, żaden bajt dysku nie jest użyty.
