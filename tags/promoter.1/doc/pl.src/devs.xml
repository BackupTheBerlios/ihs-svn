<?xml version="1.0" encoding="iso-8859-2"?>
<chapter id="products">
	<title>¦rodowisko i technologie wykorzystane do realizacji projektu</title>

	<para>
		Rozdzia³ zawiera przegl±d najwa¿niejszych narzêdzi i technologii wykorzystanych
		podczas projektowania i realizacji IHS.
	</para>

	<section id="products.linux">
		<title>Linux</title>
		<para>
			Pierwszym z obs³ugiwanych przez IHS systemów operacyjnych bêdzie
			Linux. Decyzja taka podjêta zosta³a dlatego, ¿e jest to jeden z
			najbardziej popularnych systemów operacyjnych instalowanych na serwerach
			w Internecie.
		</para>

		<para>
			Zdecydowano siê na wspieranie tylko 2 spo¶ród kilkuset istniej±cych
			dystrybucji Linuksa, s± to dwie najbardziej popularne dystrybucje: Fedora Core 
			(darmowa wersja, na której bazuje Red Hat Enterprise Linux) oraz OpenSUSE (darmowa
			wersja, na której bazuje SuSe Linux Enterprise Server). S± one dosyæ podobne do siebie
			co upraszcza proces tworzenia i dystrybucji oprogramowania.
		</para>

		<para>
			Obie dystrybucje oparte s± o menad¿era pakietów zwanego RPM, dziêki czemu
			³atwo utworzyæ wersjê instalacyjn±. U³atwia to zarz±dzanie oprogramowaniem,
			zachêca do wypróbowania produktu (poniewa¿ ³atwo mo¿na go odinstalowaæ).
			Pakiety tworzone przez ten program zawieraj± informacje o zale¿no¶ciach, 
			operacjach wymaganych przy aktualizacji, itp.
		</para>
	
		<para>
			Oprócz wybranych systemów planowana jest w przysz³o¶ci obs³uga innych
			Uniksów. System operacyjny Windows najprawdopodobniej nie bêdzie 
			oficjalnie wspierany.
		</para>

		<para>
			Dystrybucja OpenSUSE wykorzystywana by³a równie¿ jako podstawowa platforma w czasie tworzenia IHS.
			Zosta³a wybrana poniewa¿ domy¶lnie posiada wiele aplikacji zwi±zanych z Jav± - np. Eclipse, ró¿ne biblioteki programistyczne.
			Jej zalet± jest równie¿ to, ¿e w przeciwieñstwie do Fedora Core, zawiera wirtualn± maszynê Javy oraz ¶rodowisko programistyczne
			firmy Sun.
		</para>
	</section>

	<section id="products.databases">
		<title>Bazy danych: PostgreSQL, Oracle</title>
		<para>
			Jak ka¿dy z³o¿ony system, IHS potrzebuje do swojego dzia³ania
			bazê danych. S³u¿y ona jako magazyn dla wszelkich danych konfiguracyjnych,
			zawiera informacje o u¿ytkownikach, oraz wszelkie inne dane, które musz± byæ
			stale dostêpne.
		</para>

		<para>
			Zdecydowano siê na wykorzystanie dwóch ró¿nych relacyjnych baz danych, dziêki
			czemu mo¿na dopasowaæ system do w³asnych potrzeb. Oracle jest liderem
			na rynku komercyjnych baz danych, dlatego wybrano go jako zaplecze dla
			korporacyjnych instalacji. PostgreSQL natomiast stanowi lidera je¿eli chodzi
			o zaawansowane bazy z otwartym kodem ¼ród³owym. Ma on stanowiæ zaplecze
			dla wdro¿eñ w ¶rednich i ma³ych firmach, które nie potrzebuj± funkcjonalno¶ci
			oferowanej przez Oracle.
		</para>

		<para>
			Wybór podyktowany by³ równie¿ pewnym podobieñstwem obu tych systemów - oferuj± 
			podobne cechy takie jak widoki, procedury uruchamiane po stronie serwera, mechanizm
			spustowy. Funkcje te zosta³y wykorzystane w czasie realizacji systemu. Dlatego MySQL,
			czyli najpopularniejsza bazy danych z otwartym kodem ¼ród³owym, nie jest aktualnie obs³ugiwana - nie posiada takiej
			bogatej funkcjonalno¶ci. Wsparcie dla tej bazy danych wymaga³oby zmianê architektury systemu.
		</para>

		<para>
			Argumentem za takim wyborem by³y równie¿ mo¿liwo¶ci systemu Virtual Qmail - system ten
			aktualnie obs³uguje tylko bazy Oracle i PostgreSQL. Poniewa¿ stanowi on integraln± czê¶æ
			IHS nale¿a³o zaimplementowaæ ich obs³ugê - aby u³atwiæ administracjê oraz zapewniæ
			jak najlepsz± integracjê.
		</para>
	</section>

	<section id="products.v-q">
		<title>Virtual Qmail</title>
		<para>
			Jest to system pocztowy, do którego zarz±dzania ma s³u¿yæ IHS. Virtual Qmail to zestaw aplikacji opartych o
			program Qmail, który tworzy zaawansowany system pocztowy, w którym tworzenie i zarz±dzanie domenami i u¿ytkownikami zosta³o
			uproszczone w porównaniu z samym programem Qmail.
		</para>

		<para>
			IHS stanowi interfejs u¿ytkownika, który miêdzy innymi s³u¿yæ ma do zarz±dzania systemem Virtual Qmail.
			Na rynku istnieje kilka innych, podobnych do Virtual Qmail, systemów. Zdecydowano siê na wybór
			tej aplikacji poniewa¿ stanowi ona autorskie rozwi±zanie zrealizowane podczas wcze¶niejszego
			projektu, patrz [NIE-2003].
		</para>
	</section>

	<section id="products.corba">
		<title>CORBA</title>
		<para>
			W celu umo¿liwienia jak naj³atwiejszej integracji Virtual Qmail z innymi systemami, np. takimi
			jak IHS, zmodernizowano komunikacjê miêdzy elementami i wprowadzono obs³ugê CORBA.
		</para>

		<para>
			CORBA jest to miêdzyplatformowy protokó³ komunikacyjny s³u¿±cy do zdalnego wywo³ywania metod publikowanych obiektów.
			Umo¿liwia integracjê systemów napisanych w ró¿nych jêzykach np. python, Java, C, C++ - obiekty udostêpniane za pomoc± CORBA
			mo¿na wykorzystywaæ tak jakby by³y obiektami lokalnymi aplikacji. Upraszcza to integracjê ró¿nych systemów, u³atwia równie¿ tworzenie
			rozproszonych aplikacji.
		</para>

		<para>
			Virtual Qmail sk³ada siê z niezale¿nych us³ug dostêpnych poprzez CORBA. IHS stanowi klienta dla nich.
		</para>
	</section>

	<section id="products.java">
		<title>Java</title>
		<para>
			Jako jêzyk implementacji systemu wybrano Java. Decyzja podyktowana by³a
			popularno¶ci± danego jêzyka w krêgu twórców serwisów internetowych, mo¿liwo¶ci±
			³atwego tworzenia aplikacji oraz pó¼niejszego utrzymania.
		</para>

		<para>
			Innymi mo¿liwymi do wykorzystania jêzykami by³y C++, PERL, PHP czy python. Na ich niekorzy¶æ
			przemawia³y miêdzy innymi nastêpuj±ce argumenty: 
			<itemizedlist>
				<listitem>
					<para>
						C++ - niewielkie wsparcie dla tworzenia zaawansowanych serwisów internetowych, d³u¿szy ni¿ w przypadku innych jêzyków
						czas wytwarzania aplikacji spowodowany wiêkszym skompilowaniem jêzyka, brakiem bibliotek oraz ¶rodowiska podobnego do J2EE;
					</para>
				</listitem>
				<listitem>
					<para>
						PERL - nieprzystosowanie jêzyka do tworzenia zaawansowanych systemów obiektowych, brak tak rozbudowanego
						¶rodowiska jak J2EE;
					</para>
				</listitem>
				<listitem>
					<para>
						PHP - niekompletne wsparcie dla CORBA;
					</para>
				</listitem>
				<listitem>
					<para>
						python - niezbêdny dodatkowy czas na poznanie jêzyka, Zope (platforma podobna do J2EE) jest mniej popularne od J2EE;
					</para>
				</listitem>
			</itemizedlist>
		</para>

		<para>
			Java w porównaniu z innymi jêzykami oferuje ³atwo¶æ tworzenia aplikacji, bardzo dobre zaplecze je¿eli chodzi o 
			sam± platformê - J2EE, jak i o dokumentacjê czy porady do¶wiadczonych u¿ytkowników. Posiada równie¿ standardowo
			obs³ugê CORBA, dziêki standardowy JDBC bardzo ³atwo tworzyæ aplikacje bazodanowe wspó³pracuj±ce z ró¿nymi RDBMS.
		</para>
	</section>

	<section id="products.jsf">
		<title>JavaServer Faces</title>
		<para>
			Aby upro¶ciæ tworzenie aplikacji internetowej zdecydowano siê na wykorzystanie zyskuj±cego na popularno¶ci
			i bêd±cego oficjalnym standardem frameworka zwanego JavaServer Faces. Jest to dodatkowa warstwa mo¿liwa 
			do wykorzystania
			w czasie tworzenia stron JSP, która zapewnia obiektow± otoczkê do standardowych elementów dostêpnych w jêzyku HTML
			oraz JSP. Umo¿liwia równie¿ separacjê logiki biznesowej od warstwy prezentacji.
		</para>

		<para>
			Zalet± JSF w stosunku do innych podobnych rozwi±zañ jest ³atwo¶æ integracji istniej±cych technologii. £atwo
			mo¿na wykorzystywaæ technologie takie jak Struts, biblioteki znaczników (np. JSTL), itp. Istnieje równie¿
			mo¿liwo¶æ rozwijania i dodawania w³asnych rozwi±zañ. Mo¿na tworzyæ w³asne walidatory, konwertery czy nawet nowe elementy
			takie jak zaawansowane tabele, listy wyboru, itp.
		</para>

		<para>
			Poniewa¿ jest to oficjalny standard technologia ta nie stanowi ¶lepego zau³ku, wrêcz przeciwnie - nale¿y siê spodziewaæ,
			¿e serwery aplikacji bêd± domy¶lnie posiada³y odpowiednie biblioteki. Czyli instalacja aplikacji mo¿e byæ ³atwiejsza
			ni¿ w przypadku innych rozwi±zañ.
		</para>

		<para>
			Nie jest to narzêdzie doskona³e - brakuje pewnych elementów, obs³uga mieszanych elementów HTML i JSF czasami wymaga
			dodatkowego wysi³ku. Dla przyk³adu zagnie¿d¿anie elementów HTML wewn±trz elementów JSF wymaga u¿ycia specjalnego tagu verbatim.
			W przypadku gdy go brakuje kod HTML zostanie wygenerowany niepoprawnie. Nie jest to problemem w przypadku prostych stron HTML,
			natomiast czasami potrafi prowadziæ do tego, ¿e kod JSP strony wygl±da dosyæ zagmatwanie.
		</para>

		<para>
			W czasie realizacji projektu wykorzystywana by³a domy¶lna implementacja dostêpna na stronie firmy Sun. Zauwa¿ono,
			¿e sposób implementacji, w niektórych przypadkach powoduje trudno¶ci w lokalizacji b³êdów programistycznych - czasami wyj±tki i 
			komunikaty generowane sugeruj± (lub wrêcz nie sugeruj± w ogóle) mylnie ¼ród³a b³êdów.
		</para>

		<para>
			Warto nadmieniæ, ¿e trwaj± prace nad now± wersj± standardu, zwiêksza siê liczba u¿ytkowników oraz rozwi±zañ
			bazuj±cych na nim co oznacza, ¿e by³ to dobry wybór.
		</para>
	</section>

	<section id="products.tomcat">
		<title>Tomcat 5</title>
		<para>
			Tomcat jest jednym z najpopularniejszych serwerów servletów dostêpnych na rynku. Jego popularno¶æ umotywowana
			jest miêdzy innymi tym, ¿e jest on stale rozwijany, dostêpny za darmo, posiada równie¿ dobr± dokumentacjê i
			du¿e grono u¿ytkowników.
		</para>

		<para>
			Dodatkowo jest ³atwy w konfiguracji, posiada akceptowaln± wydajno¶æ oraz wszystkie niezbêdne funkcje, które
			wymagane s± przez projekt.
		</para>

		<para>
			W przysz³o¶ci planowana jest obs³uga innych serwerów J2EE, natomiast w chwili obecnej system jest przetestowany
			tylko z tym serwerem.
		</para>
	</section>

	<section id="products.eclipse">
		<title>Eclipse</title>

		<para>
			Jako ¶rodowisko programistyczne pocz±tkowo wykorzystywany by³ Oracle JDeveloper. Stanowi on zintegrowane ¶rodowisko programistyczne,
			posiada wiele u³atwieñ przydatnych w czasie tworzenia aplikacji J2EE. Posiada wsparcie dla UML - potrafi tworzyæ diagramy na podstawie
			kodu Java, jak i kod Java na podstawie diagramów. Dodatkow± zalet± jest równie¿ wsparcie dla technologii JavaServer Faces - graficzne narzêdzia
			do tworzenia plików konfiguracyjnych jak i samych stron JSF.
		</para>

		<para>
			Wad± tego produktu s± du¿e wymagania sprzêtowe. Wraz ze wzrostem z³o¿ono¶ci systemu praca z t± aplikacj± stawa³a siê coraz trudniejsza - aplikacja
			wymaga³a coraz wiêcej pamiêci, czas reakcji na zdarzenia wzrós³ do tego stopnia, ¿e praca sta³a siê niewygodna. Eclipse w porównaniu z Oracle
			JDeveloper posiada znacznie mniejsze wymagania sprzêtowe dlatego zdecydowano siê na migracjê.
		</para>

		<para>
			Eclipse zapewnia dobr± platformê do tworzenia aplikacji Java. Dziêki du¿ej popularno¶ci istnieje wiele przydatnych narzêdzi
			integruj±cych siê z tym ¶rodowiskiem, które upraszczaj± pracê nad aplikacjami JavaServer Faces. Nie oferuje on tak bogatego zestawu funkcji
			jak Oracle JDeveloper, jednak by³ on wystarczaj±cy do wygodnej realizacji tego projektu.
		</para>
	</section>

	<section id="products.poseidon">
		<title>Poseidon</title>

		<para>
			Narzêdzie to zosta³o wykorzystane do tworzenia diagramów UML. Wykorzystywana by³a darmowa wersja - Community Edition. Zdecydowano siê na wybór
			tego narzêdzia poniewa¿ obs³uguje generowanie kodu Java na podstawie diagramów, jak równie¿ generowanie diagramów na podstawie istniej±cego kodu Java.
			Dzia³a stabilnie, posiada wsparcie dla wszystkich rodzajów diagramów UML, jest równie¿ ³atwe w u¿yciu.
		</para>

		<para>
			Decyzja zosta³a podjêta po ewaluacji dwóch innych narzêdzi s³u¿acych do modelowania UML:
			<itemizedlist>
				<listitem><para>ArgoUML - darmowa aplikacja, ³atwa w u¿yciu, posiadaj±ca ma³e wymagania sprzêtowe, jednak¿e 
					nie posiadaj±ca wsparcia dla wszystkich diagramów, czasami dzia³a³a niestabilnie;</para></listitem>
				<listitem><para>Oracle JDeveloper - stanowi czê¶æ rozbudowanego ¶rodowiska programistycznego, które ma dosyæ du¿e wymagania sprzêtowe,
					czasami dziwnie dzia³a³a synchronizacja kodu Java i modeli UML;</para></listitem>
			</itemizedlist>
		</para>
	</section>
</chapter>

<chapter id="devs">
	<title>Dokumentacja techniczna</title>
	
	<section id="design">
		<title>Przyjête za³o¿enia projektu</title>

		<section id="design.related">
			<title>Oprogramowanie i sprzêt</title>
			<para>
				Podstaw± IHS bêdzie stanowi³ system operacyjny kompatybilny
				z Uniksem, w tym wypadku domy¶lnie bêdzie to Linux. Docelowo
				wspierane bêd± równie¿ takie systemy jak OpenBSD (rodzina *BSD),
				Solaris. Wykorzystywane bêd± dwie dystrybucje Linuksa - SuSe
				oraz Fedora Core (poniewa¿ s± to jedne z najpopularniejszych
				dystrybucji, czêsto u¿ywane s± na serwerach).
			</para>

			<para>
				IHS opiera³ siê bêdzie o takie elementy jak serwer aplikacji J2EE, 
				MTA, Virtual Qmail. Zak³adana jest 
				mo¿liwo¶æ wymiany ka¿dej z aplikacji odpowiedzialnych
				za poszczególne funkcje - dlatego projekt bêdzie musia³
				byæ modularny, z wymiennymi, kompatybilnymi ze sob±
				czê¶ciami.
			</para>
			
			<para>
				Poniewa¿ jedyn± dostêpn± w czasie realizacji projektu,
				platform± sprzêtow± jest x86 projekt bêdzie realizowany w oparciu o ni±.
				Nie wykluczone jest natomiast u¿ywanie systemu na
				innych architekturach. Poniewa¿ na serwerach coraz
				czê¶ciej wykorzystywane s± procesory IA-64 warto by³oby
				jak najszybciej przygotowywaæ system w wersji na t±
				architekturê.
			</para>
		</section>

		<section id="design.users">
			<title>U¿ytkownicy systemu</title>
			<para>
				Docelowymi grupami u¿ytkowników s±:
			</para>
			<formalpara>
				<title>Normalni u¿ytkownicy</title>
				<para>
					Nie posiadaj±, lub posiadaj±
					znikom± wiedzê na temat funkcjonowania systemu, 
					zainteresoany s± tylko wykorzystaniem
					¶wiadczonych przez system us³ug, wiedza
					informatyczna nie jest od nich wymagana; najmniejsze
					uprawnienia;
				</para>
			</formalpara>
			<formalpara>
				<title>Administratorzy domen</title>
				<para>
					Posiadaj± wiedzê
					na temat opcji oferowanych przez system,
					ich wykorzystywania w zakresie prowadzonej
					przez nich dzia³alno¶ci, zainteresowani
					s± wykorzystywaniem us³ug udostêpnianych przez
					serwer oraz ich podstawow± konfiguracj± (w³±czanie,
					wy³±czanie, itp.), wiedza informatyczna nie jest
					od nich wymagana; uprawnienia poszerzone o zarz±dzanie
					us³ugami zwi±zanymi z zarz±dzan± domen±;
				</para>
			</formalpara>
			<formalpara>
				<title>Administratorzy systemu</title>
				<para>
					Posiadaj± wiedzê
					na temat ¶rodowiska w jakim pracuje
					IHS,  instalacji oraz konfiguracji
					oprogramowania w tym ¶rodowisku, wymagana
					jest podstawowa znajomo¶æ wykorzystywanego
					przez IHS oprogramowania (np. instalacja
					wymaganych programów), znajomo¶æ systemu IHS;
					posiadaj± nieograniczone prawa;
				</para>
			</formalpara>
			<formalpara>
				<title>Programi¶ci</title>
				<para>
					Posiadaj± wiedzê na temat
					funkcji oferowanych przez IHS, 
					architektury systemu, wykorzystywanych
					baz danych, opcji konfiguracyjnych, protoko³ó³
					komunikacyjnych, udostêpnianego API; znajomo¶æ
					informacji takich jak system operacyjny danej
					instalacji, wykorzystywane programy powinny
					byæ dla nich bez znaczenia; nie stanowi± bezpo¶rednich
					u¿ytkowników systemu;
				</para>
			</formalpara>

			<para>
				Ka¿da z grup u¿ytkowników musi byæ dynamicznie
				rozpoznawana. Jedna instalacja IHS musi byæ
				w stanie obs³u¿yæ ka¿dy rodzaj u¿ytkownika, na podstawie
				informacji przekazywanych od niego ustalana jest
				przynale¿no¶æ do danej grupy oraz adaptowane s± 
				udostêpniane funkcje. Powinna istnieæ równie¿ mo¿liwo¶æ
				limitowania dostêpu do danej instalacji tylko do
				u¿ytkowników wybranej grupy.
			</para>
		</section>

		<section id="design.reqs">
			<title>Analiza wymagañ</title>
			
			<section id="design.reqs.soft">
				<title>Wymagania dotycz±ce sprzêtu i oprogramowania</title>
		
				<table frame="all" id="tab.reqs.soft">
					<title>Wymagania dotycz±ce sprzêtu i oprogramowania</title>
					<tgroup cols="3">
						<colspec colwidth="1*"/>
						<colspec colwidth="2*"/>
						<colspec colwidth="7*"/>
						<thead>
							<row>
								<entry>Id.</entry>
								<entry>Priorytet</entry>
								<entry>Wymaganie</entry>
							</row>
						</thead>
						<tbody>
							<row>
								<entry id="RS-1">RS-1</entry>
								<entry>1</entry>
								<entry>Program bêdzie dzia³a³ pod systemami Linux, dystrybucja SuSe >= 9.3 oraz Fedora Core >= 4</entry>
							</row>
							<row>
								<entry id="RS-2">RS-2</entry>
								<entry>2</entry>
								<entry>Program bêdzie dzia³a³ pod systemami OpenBSD >= 3.8, NetBSD >= 3.0</entry>
							</row>
							<row>
								<entry id="RS-3">RS-3</entry>
								<entry>3</entry>
								<entry>Program bêdzie dzia³a³ pod innymi systemami Unix (np. Solaris, HP-UX)</entry>
							</row>
							<row>
								<entry id="RS-4">RS-4</entry>
								<entry>1</entry>
								<entry>Program bêdzie dzia³a³ pod serwerem Tomcat >= 5</entry>
							</row>
							<row>
								<entry id="RS-5">RS-5</entry>
								<entry>2</entry>
								<entry>Program bêdzie dzia³a³ pod serwerem JBoss</entry>
							</row>
							<row>
								<entry id="RS-6">RS-6</entry>
								<entry>3</entry>
								<entry>Program bêdzie dzia³a³ pod serwerami Oracle Application Server, WebLogic, Websphere</entry>
							</row>
							<row>
								<entry id="RS-7">RS-7</entry>
								<entry>1</entry>
								<entry>Mo¿liwe bêdzie wykorzystanie bazy danych Oracle</entry>
							</row>
							<row>
								<entry id="RS-8">RS-8</entry>
								<entry>1</entry>
								<entry>Mo¿liwe bêdzie wykorzystanie bazy danych PostgreSQL</entry>
							</row>
							<row>
								<entry id="RS-9">RS-9</entry>
								<entry>2</entry>
								<entry>Mo¿liwe bêdzie wykorzystanie bazy danych DB2</entry>
							</row>
							<row>
								<entry id="RS-10">RS-10</entry>
								<entry>1</entry>
								<entry>Domy¶ln± platform± jest x86, testy wydajno¶ciowe musz± byæ spe³nione na maszynie P4 >= 3GHz, 512MB >= RAM</entry>
							</row>
						</tbody>
					</tgroup>
				</table>
			</section>

			<section id="design.reqs.general">
				<title>Wymagania ogólne</title>
		
				<table frame="all" id="tab.reqs.general">
					<title>Wymagania ogólne</title>
					<tgroup cols="3">
						<colspec colwidth="1*"/>
						<colspec colwidth="2*"/>
						<colspec colwidth="7*"/>
						<thead>
							<row>
								<entry>Id.</entry>
								<entry>Priorytet</entry>
								<entry>Wymaganie</entry>
							</row>
						</thead>
						<tbody>
							<row>
								<entry id="RG-1">RG-1</entry>
								<entry>1</entry>
								<entry>Istnieje mo¿liwo¶æ wyboru jêzyka, za pomoc± którego komunikujemy siê z serwisem</entry>
							</row>
							<row>
								<entry id="RG-2">RG-2</entry>
								<entry>1</entry>
								<entry>Zostanie utworzony polski i angielski interfejs u¿ytkownika</entry>
							</row>
							<row>
								<entry id="RG-3">RG-3</entry>
								<entry>1</entry>
								<entry>System umo¿liwia dodanie nowej domeny</entry>
							</row>
							<row>
								<entry id="RG-4">RG-4</entry>
								<entry>1</entry>
								<entry>System umo¿liwia usuniêcie istniej±cej domeny</entry>
							</row>
							<row>
								<entry id="RG-5">RG-5</entry>
								<entry>1</entry>
								<entry>System umo¿liwia dodanie u¿ytkownika do domeny</entry>
							</row>
							<row>
								<entry id="RG-6">RG-6</entry>
								<entry>1</entry>
								<entry>System umo¿liwia zmianê parametrów konta u¿ytkownika</entry>
							</row>
							<row>
								<entry id="RG-7">RG-7</entry>
								<entry>1</entry>
								<entry>Istnieje mo¿liwo¶æ usuniêcia konta u¿ytkownika</entry>
							</row>
							<row>
								<entry id="RG-8">RG-8</entry>
								<entry>1</entry>
								<entry>Istnieje mo¿liwo¶æ przegl±dania zarejestrowanych domen</entry>
							</row>
							<row>
								<entry id="RG-9">RG-9</entry>
								<entry>1</entry>
								<entry>Istnieje mo¿liwo¶æ przegl±dania zarejestrowanych u¿ytkowników</entry>
							</row>
							<row>
								<entry id="RG-10">RG-10</entry>
								<entry>1</entry>
								<entry>Istnieje mo¿liwo¶æ przegl±dania logów tworzonych przez Virtual Qmail</entry>
							</row>
							<row>
								<entry id="RG-11">RG-11</entry>
								<entry>2</entry>
								<entry>Istnieje mo¿liwo¶æ definiowania w³asnych raportów opartych o logu Virtual Qmail</entry>
							</row>
							<row>
								<entry id="RG-12">RG-12</entry>
								<entry>1</entry>
								<entry>Istnieje mo¿liwo¶æ dodania administratora systemu</entry>
							</row>
							<row>
								<entry id="RG-13">RG-13</entry>
								<entry>1</entry>
								<entry>Istnieje mo¿liwo¶æ usuniêcia administratora systemu</entry>
							</row>
							<row>
								<entry id="RG-14">RG-14</entry>
								<entry>1</entry>
								<entry>Istnieje mo¿liwo¶æ zmiany konta administratora systemu</entry>
							</row>
						</tbody>
					</tgroup>
				</table>
			</section>
		
			<section id="design.reqs.performance">
				<title>Wymagania dotycz±ce wydajno¶ci</title>
		
				<table frame="all" id="tab.reqs.performance">
					<title>Wymagania dotycz±ce wydajno¶ci</title>
					<tgroup cols="3">
						<colspec colwidth="1*"/>
						<colspec colwidth="2*"/>
						<colspec colwidth="7*"/>
						<thead>
							<row>
								<entry>Id.</entry>
								<entry>Priorytet</entry>
								<entry>Wymaganie</entry>
							</row>
						</thead>
						<tbody>
							<row>
								<entry id="RP-1">RP-1</entry>
								<entry>2</entry>
								<entry>System powinien byæ w stanie odpowiadaæ w czasie mniejszym ni¿ 30 sekund gdy zarejestrowanych jest 1000 domen</entry>
							</row>
							<row>
								<entry id="RP-2">RP-2</entry>
								<entry>2</entry>
								<entry>System powinien byæ w stanie odpowiadaæ w czasie mniejszym ni¿ 30 sekund gdy w domenie zarejestrowanych jest 10000 u¿ytkowników</entry>
							</row>
							<row>
								<entry id="RP-3">RP-3</entry>
								<entry>1</entry>
								<entry>Dodawanie domeny nie mo¿e trwaæ wiêcej ni¿ 30 sekund, niezale¿nie od ilo¶ci zarejestrowanych domen</entry>
							</row>
							<row>
								<entry id="RP-4">RP-4</entry>
								<entry>1</entry>
								<entry>Dodawanie u¿ytkownika nie mo¿e trwaæ wiêcej ni¿ 30 sekund, niezale¿nie od ilo¶ci zarejestrowanych u¿ytkowników</entry>
							</row>
							<row>
								<entry id="RP-5">RP-5</entry>
								<entry>1</entry>
								<entry>Zmiana has³a u¿ytkownika nie mo¿e trwaæ wiêcej ni¿ 15 sekund, niezale¿nie od ilo¶ci zarejestrowanych u¿ytkowników</entry>
							</row>
						</tbody>
					</tgroup>
				</table>
			</section>

			<section id="design.reqs.security">
				<title>Wymagania dotycz±ce bezpieczeñstwa</title>
		
				<table frame="all" id="tab.reqs.security">
					<title>Wymagania dotycz±ce bezpieczeñstwa</title>
					<tgroup cols="3">
						<colspec colwidth="1*"/>
						<colspec colwidth="2*"/>
						<colspec colwidth="7*"/>
						<thead>
							<row>
								<entry>Id.</entry>
								<entry>Priorytet</entry>
								<entry>Wymaganie</entry>
							</row>
						</thead>
						<tbody>
							<row>
								<entry id="RA-1">RA-1</entry>
								<entry>2</entry>
								<entry>
									Dostêp do systemu oparty bêdzie o u¿ytkowników i role, 
									przed skorzystaniem z systemu u¿ytkownik bêdzie musia³ potwierdziæ 
									swoj± to¿samo¶æ, system na podstawie konfiguracji okre¶li role nadane danemu u¿ytkownikowi</entry>
							</row>
							<row>
								<entry id="RA-2">RA-2</entry>
								<entry>2</entry>
								<entry>Nowy typ administratora systemu - "zwyk³y", który nie ma mo¿liwo¶ci zmiany danych innych administratorów</entry>
							</row>
							<row>
								<entry id="RA-3">RA-3</entry>
								<entry>2</entry>
								<entry>Nowy typ administratora system - "super", który ma mo¿liwo¶æ zmiany danych innych administratorów, oraz super administratorów</entry>
							</row>
							<row>
								<entry id="RA-4">RA-4</entry>
								<entry>2</entry>
								<entry>Autentykacja u¿ytkowników oparta o login i has³o</entry>
							</row>
						</tbody>
					</tgroup>
				</table>
			</section>


		</section>

		<section id="design.goals">
			<title>Cele i wytyczne</title>

			<para>
				W czasie realizacji projektu nale¿y braæ pod uwagê nastêpuj±ce
				wytyczne.
			</para>

			<formalpara>
				<title>Zasada KISS</title>
				<para>
					Zachowanie zasady KISS (ang. keep it simple stupid!) - 
					architektura, algorytmy, mechanizmy u¿yte w czasie
					implementacji powinny byæ jak najprostrze. Dziêki temu
					powstanie produkt ³atwy w utrzymaniu, rozszerzaniu i
					instalacji.
				</para>
			</formalpara>

			<formalpara>
				<title>Brak przedwczesnej optymalizacji</title>
				<para>
					Optymalizacja
					mo¿e mieæ miejsce tylko i wy³±cznie po stwierdzeniu
					empirycznie faktu i¿ jest ona niezbêdna. Implementacja
					powinna skupiaæ siê na poprawno¶ci dzia³ania i 
					czytelno¶ci kodu, szybko¶æ jest spraw± nieistotn±.
				</para>
			</formalpara>
			
			<formalpara>
				<title>Szybko¶æ zwracania wszystkich wyników vs szybko¶æ zwracania pierwszych</title>
				<para>
					Liczy siê wygl±d i odczuwanie programu - powinna istnieæ
					mo¿liwo¶æ zmiany ca³ego wygl±du aplikacji zgodnie
					z ¿yczeniem klienta. W czasie operacji wykonywanych
					przy udziale u¿ytkownika system musi dzia³aæ szybko 
					- u¿ytkownik nie mo¿e byæ zmuszony do d³u¿szego czekania
					na wyniki. Istotny jest czas otrzymania pierwszych
					wyników.
				</para>
			</formalpara>
		</section>
	</section>

	<section id="strategies.errors">
		<title>Obs³uga b³êdów</title>

		<para>
			W czasie dzia³ania aplikacji mog± wyst±piæ nieprzewidziane
			sytuacje, które mog± wp³yn±æ na dzia³anie systemu, np. spowodowaæ,
			¿e niektórych czynno¶ci nie da siê wykonaæ.
		</para>

		<para>
			Tworz±c system nale¿y pamiêtaæ o takich sytuacjach i zak³adaæ,
			¿e mog± siê one pojawiæ w dowolnym momencie, dlatego nale¿y
			zwróciæ uwagê na obs³ugê wszelkich b³êdów.
		</para>

		<para>
			Nie mo¿na ignorowaæ warto¶ci zwracanych przez funkcje czy wyj±tków.
			Wszystkie one musz± byæ otoczone odpowiedni± obs³ug±, która
			zapewni, ¿e w przypadku b³êdu odpowiednia informacja zostanie
			przedstawiona u¿ytkownikowi (komunikat o b³êdzie a nie
			pusta strona), istotne jest równie¿ aby b³êdy by³y zapisywane
			po stronie serwera.
		</para>

		<para>
			Poniewa¿ ¶rodowisko u¿ytkownika jest poza kontrol±, nale¿y
			zapewniæ mo¿liwo¶æ odtworzenia czynno¶ci, które doprowadzi³y
			do zaistnienia b³êdu. Bardzo pomocne w tym celu s± odpowiednie
			logi zapisywane po stronie serwera. Nale¿y zapisywaæ wszelkie informacje,
			które mog± pomóc w wykryciu i ustaleniu przyczyn awarii.
		</para>
	</section>

	<section id="strategies.database">
		<title>Baza danych</title>

		<para>
			IHS domy¶lnie bêdzie korzysta³ tylko z jednej instancji bazy
			danych. Inne konfiguracje musz± byæ zaimplementowane
			przez administratora systemu.
		</para>

		<para>
			W bazie danych zapisywane bêd± wszelkie informacje, które
			maj± byæ dostêpne przez d³u¿szy okres (ni¿ sesja u¿ytkownika),
			a które nie s± na tyle du¿e (wiêcej ni¿ kilka megabajtów) aby
			utrudnia³y korzystanie z bazy.
		</para>

		<para>
			Systemy, z którymi IHS bêdzie zintegrowany, np. Virtual Qmail,
			mog± posiadaæ swoje w³asne bazy danych. Je¿eli istnieje
			taka mo¿liwo¶æ nie powinny one byæ wykorzystywane bezpo¶rednio
			lecz przy u¿yciu API dostarczanego przez dan± aplikacjê.
			Takie podej¶cie umo¿liwi ³atwiejsz± konfiguracjê i utrzymanie.
		</para>

		<para>
			W przypadkach gdy takie API nie istnieje nale¿y zastanowiæ siê
			nad wydzieleniem osobnych elementów, które bêd± odpowiedzialne 
			za obs³ugê zewnêtrznej bazy danych. Nale¿y równie¿ pamiêtaæ
			o tym ¿eby takie komponenty mo¿na by³o konfigurowaæ za pomoc±
			IHS. Nie wolno u¿ywaæ zakodowanych na sta³e ¶cie¿ek, hase³,
			u¿ytkowników czy nazw baz danych.
		</para>
	</section>

	<section id="architecture">
		<title>Architektura systemu</title>

        <figure id="figure.architecture.overall">
            <title>Wysokopoziomowa architektura systemu</title>
            <graphic align="center" fileref="../imgs/Overallarchitecture.png" format="PNG"/>
        </figure>

		<para>	
			<xref linkend="figure.architecture.overall"/> przedstawia
			jeden z najbardziej skomplikowanych przypadków gdy ka¿dy
			z elementów znajduje siê na innym systemie operacyjnym.
		</para>

		<para>
			System umo¿liwia ³atwe przenoszenie us³ug i wykorzystywanie
			w pe³ni istniej±cej mocy obliczeniowej. W wiêkszo¶ci przypadków
			jednak wykorzystywana bêdzie architektura zawieraj±ca wszystkie
			elementy na tym samym serwerze.
		</para>

		<para>
			W przysz³o¶ci w miarê rozrastania siê mo¿liwo¶ci IHS i 
			integrowania go z innymi us³ugami architektura systemu mo¿e
			zawieraæ znacznie wiêcej elementów.
		</para>

		<para>
			Virtual Qmail i IHS komunikuj± siê za pomoc± protoko³u CORBA,
			bazy danych wykorzystywane s± za pomoc± protoko³u JDBC.
		</para>

		<formalpara>
			<title>Virtual Qmail</title>
			<para>
				Odpowiedzialny jest za zarz±dzanie systemem pocztowym.
				System zarz±dza plikami konfiguracyjnymi programu pocztowego, 
				utrzymuje na dysku odpowiednie struktury danych, w których
				przechowywana jest poczta u¿ytkowników. Zawiera
				modu³ autoryzacyjny. Posiada równie¿ mo¿liwo¶æ logowania 
				czynno¶ci wykonywanych przez u¿ytkowników.
			</para>
		</formalpara>

		<formalpara>
			<title>Virtual Qmail DB</title>
			<para>
				Baza danych obs³uguj±ca Virtual Qmail. Zawiera
				informacje o domenach, u¿ytkownikach, konfiguracji.
				IHS nie powinien z niej korzystaæ bezpo¶rednio tylko za pomoc± 
				API udostêpnianego przez V-Q. Jednak¿e mog± istnieæ przypadki
				gdy tylko bezpo¶redni dostêp pozwoli osi±gn±æ oczekiwan±
				funkcjonalno¶æ.
			</para>
		</formalpara>

		<formalpara>
			<title>Incredible Hosting System</title>
			<para>
				Jest to interfejs WWW umo¿liwiaj±cy administracjê
				Virtual Qmailem oraz w przysz³o¶ci innym oprogramowaniem. 
				Dzia³a w ¶rodowisku J2EE. Sk³ada siê ze stron JSP, Servletów
				oraz statycznych plików.
			</para>
		</formalpara>

		<formalpara>
			<title>Incredible Hosting System DB</title>
			<para>
				Baza danych wy³±cznie na us³ugi IHS. Zawiera konfiguracjê
				oraz inne niezbêdne dane.
			</para>
		</formalpara>
		
        <figure id="figure.architecture.ihsdb">
            <title>Architektura bazy IHS</title>
            <graphic align="center" fileref="../imgs/IHSDatabaseArchitecture.png" format="PNG"/>
        </figure>

		<para>	
			<xref linkend="figure.architecture.ihsdb"/> przedstawia
			sk³adowe bazy danych. Wykorzystywane s± nastêpuj±ce mechanizmy: 
			tabele, widoki, wbudowane procedury. Po³o¿ony jest szczególny
			nacisk na uniezale¿nienie od siebie poszczególnych systemów,
			wiêkszo¶æ operacji na bazie danych wykonywana jest za pomoc±
			procedur, dane pobierane s± w oparciu o widoki. Takie podej¶cie
			umo¿liwia optymalizacjê struktury samej bazy danych bez
			konieczno¶ci modyfikacji elementów korzystaj±cych z niej.
			Dodatkow± zalet± takiego podej¶cia jest wspó³dzielenie kodu
			operuj±cego na danych. Wszelkie aplikacje mog± korzystaæ
			z tych samych procedur, dziêki czemu administracja ca³ym
			systemem zostaje uproszczona.
		</para>

		<section id="architecture.v_q">
			<title>Architektura Virtual Qmail</title>

			<figure id="figure.architecture.v_q">
	            <title>Architektura Virtual Qmail</title>
	            <graphic align="center" fileref="../imgs/VirtualQmailArchitecture.png" format="PNG"/>
	        </figure>

			<para>	
				<xref linkend="figure.architecture.v_q"/> przedstawia
				elementy, które s± niezbêdnie do funkcjonowania IHS, Virtual
				Qmail jest bardziej z³o¿onym systemem, niektóre elementy
				zosta³y celowo pominiête. Przedstawione na rysunku procesy
				dostêpne s± za pomoc± protoko³u CORBA.
			</para>

			<formalpara>
				<title>ivq</title>
				<para>
					G³ówna czê¶æ systemu. Us³uga udostêpnia takie funkcje
					jak zarz±dzanie u¿ytkownikami, domenami, konfiguracj±.
					¯±dania obs³ugiwane przez t± us³ugê wp³ywaj±
					bezpo¶rednio na funkcjonowanie ca³ego systemu pocztowego.
				</para>
			</formalpara>

			<formalpara>
				<title>ilogger</title>
				<para>
					Umo¿liwia dostêp do statystyk zapisywanych podczas
					dzia³ania Virtual Qmail. Za pomoc± tej us³ugi mo¿na
					pobraæ takie informacje jak ilo¶æ u¿ytkowników,
					którzy wys³ali pocztê w ci±gu ostatnich 5 minut, lista
					u¿ytkowników, którzy nie byli wstanie siê zalogowaæ, itp.
				</para>
			</formalpara>

			<para>
				Baza danych u¿ywana przez Virtual Qmail nie bêdzie w tym miejscu
				opisywana poniewa¿ IHS powinien byæ tworzony w taki
				sposób aby by³ niezale¿ny od jej struktury. Jak siê pó¼niej
				oka¿e w niektórych sytuacjach nie bêdzie to mo¿liwe.
			</para>
		</section>

		<section id="subarch.ihsdb">
			<title>Baza danych IHS</title>

	        <figure id="figure.architecture.ihsdb.details">
        	    <title>Logiczny model bazy danych IHS</title>
	            <graphic align="center" fileref="../imgs/IHSDBLogicalmodel1.png" format="PNG"/>
	            <graphic align="center" fileref="../imgs/IHSDBLogicalmodel2.png" format="PNG"/>
	            <graphic align="center" fileref="../imgs/IHSDBLogicalmodel3.png" format="PNG"/>
	            <graphic align="center" fileref="../imgs/IHSDBLogicalmodel4.png" format="PNG"/>
	        </figure>
	
			<para>	
				<xref linkend="figure.architecture.ihsdb.details"/> przedstawia
				logiczny model bazy danych.
			</para>

			<para>
				Przedstawione powy¿ej typy aktualnie zdefiniowane
				s± nastêpuj±co:
			</para>

			<table frame="all" id="tab.architecture.ihsdb.details">
				<title>Typy danych u¿ywane w bazie IHS</title>
				<tgroup cols="2">
					<colspec colwidth="1*"/>
					<colspec colwidth="1*"/>
					<thead>
						<row>
							<entry>Typ</entry>
							<entry>Definicja (dla Oracle)</entry>
						</row>
					</thead>
					<tbody>
						<row>
							<entry>ihs_config_key_type</entry>
							<entry>varchar2(1024)</entry>
						</row>
						<row>
							<entry>ihs_config_value_type</entry>
							<entry>varchar2(1024)</entry>
						</row>
						<row>
							<entry>ihs_administrator_login_type</entry>
							<entry>varchar2(512)</entry>
						</row>
						<row>
							<entry>ihs_administrator_password_type</entry>
							<entry>varchar2(512)</entry>
						</row>
					</tbody>
				</tgroup>
			</table>

			<formalpara>
				<title>ihs_config_set</title>
				<para>
					Procedury. Zajmuj± siê aktualizacj± konfiguracji systemu.
					Nie nale¿y bezpo¶rednio operowaæ na tablicach.
				</para>
			</formalpara>
			<formalpara>
				<title>ihs_config_tuple</title>
				<para>
					Schemat krotki, która przechowywana jest w tablicy ihs_config.
				</para>
			</formalpara>
			<formalpara>
				<title>ihs_config</title>
				<para>
					Tablica zawieraj±ca informacje o konfiguracji systemu.
				</para>
			</formalpara>
			<formalpara>
				<title>ihs_view_config</title>
				<para>
					Widok umo¿liwiaj±cy odczytywanie konfiguracji.
					Nie nale¿y korzystaæ bezpo¶rednio z tablicy ihs_config.
				</para>
			</formalpara>
			<formalpara>
				<title>ihs_administrator_add, ihs_administrator_rm, ihs_administrator_change</title>
				<para>
					Procedury. Zarz±dzaj± zmianami listy administratorów.
				</para>
			</formalpara>
			<formalpara>
				<title>ihs_administrator_tuple</title>
				<para>
					Schemat krotki, która przechowywana jest w tablicy ihs_administrators.
				</para>
			</formalpara>
			<formalpara>
				<title>ihs_administrators</title>
				<para>
					Tablica zawieraj±ca informacje o administratorach systemu.
				</para>
			</formalpara>
			<formalpara>
				<title>ihs_view_administrators</title>
				<para>
					Widok umo¿liwiaj±cy odczytywanie listy administratorów.
					Nie nale¿y korzystaæ bezpo¶rednio z tablicy ihs_administrators.
				</para>
			</formalpara>
		</section>

		<section id="subarch.ihs">
			<title>Architektura IHS</title>

			<figure id="figure.architecture.ihs.details">
        	    <title>Architektura IHS</title>
	            <graphic align="center" fileref="../imgs/IHSArchitecture.png" format="PNG"/>
	        </figure>
	
			<para>	
				<xref linkend="figure.architecture.ihs.details"/> przedstawia
				wysokopoziomow± architekturê IHS. Poni¿ej znajduje
				siê krótki opis poszczególnych elementów.
			</para>

			<formalpara>
				<title>Configuration</title>
				<para>
					Konfiguracja u¿ywana przez serwer J2EE oraz pliki
					wykorzystywane przez JavaServer Faces.
				</para>
			</formalpara>
			<formalpara>
				<title>Static Files</title>
				<para>
					Statyczne pliki takie jak t³umaczenia,
					arkusze stylów CSS, pliki graficzne.
				</para>
			</formalpara>
			<formalpara>
				<title>JSF pages</title>
				<para>
					Strony JSF, stanowi± one interfejs u¿ytkownika.
				</para>
			</formalpara>
			<formalpara>
				<title>Libraries</title>
				<para>
					Wnêtrze systemu. Biblioteki zawieraj± kod
					komunikuj±cy siê z bazami danych, z systemem Virtual
					Qmail. Czê¶æ plików tworzona jest na podstawie opisu IDL.
				</para>
			</formalpara>
			<formalpara>
				<title>Backing beans</title>
				<para>
					Stanowi± warstwê po¶rednicz±c± miêdzy interfejsem
					u¿ytkownika a bibliotekami. Tutaj znajduj± siê
					obiekty obs³uguj±ce sesjê u¿ytkownika, itp.
				</para>
			</formalpara>
		</section>
	</section>

	<section id="policies">
		<title>Organizacja projektu</title>

		<section id="policies.software">
			<title>Wykorzystywane oprogramowanie</title>

			<para>
				W czasie prac nad systemem wykorzystywane s± nastêpuj±ce
				aplikacje:
				<itemizedlist>
					<listitem>
						<para>
							java >= 1.4.2
						</para>
					</listitem>
					<listitem>
						<para>
							ant >= 1.6
						</para>
					</listitem>
					<listitem>
						<para>	
							Oracle >= 10g
						</para>
					</listitem>
					<listitem>
						<para>
							PostgreSQL >= 8
						</para>
					</listitem>
					<listitem>
						<para>
							Eclipse >= 3.0
						</para>
					</listitem>
				</itemizedlist>
			</para>
		</section>

		<section id="policies.tree">
			<title>Organizacja struktury katalogów</title>
			<formalpara>
				<title>./doc</title>
				<para>
					Katalog, w którym przechowywana jest dokumentacja, oraz
					pliki wymagane do jej wygenerowania.
				</para>
			</formalpara>
			<formalpara>
				<title>./doc/en.src</title>
				<para>
					Pliki ¼ród³owe w formacie DocBook, z których generowana
					jest angielska wersja dokumentacji.
				</para>
			</formalpara>
			<formalpara>
				<title>./doc/en.rtf</title>
				<para>
					Dokumentacja po angielsku w formacie RTF. Generowana automatycznie.
				</para>
			</formalpara>
			<formalpara>
				<title>./doc/en.html</title>
				<para>
					Dokumentacja po angielsku w formacie HTML. Generowana automatycznie.
				</para>
			</formalpara>
			<formalpara>
				<title>./doc/imgs</title>
				<para>
					Wspólne dla wszystkich wersji obrazki.
				</para>
			</formalpara>
			<formalpara>
				<title>./doc/pl.src</title>
				<para>
					Pliki ¼ród³owe w formacie DocBook, z których generowana
					jest polska wersja dokumentacji.
				</para>
			</formalpara>
			<formalpara>
				<title>./doc/pl.rtf</title>
				<para>
					Dokumentacja po polsku w formacie RTF. Generowana automatycznie.
				</para>
			</formalpara>
			<formalpara>
				<title>./doc/pl.html</title>
				<para>
					Dokumentacja po polsku w formacie HTML. Generowana automatycznie.
				</para>
			</formalpara>
			<formalpara>
				<title>./src/com/foo_baz/ihs</title>
				<para>
					Kod ¼ród³owy zawieraj±cy g³ówn± czê¶æ systemu.
					Tutaj znajduje siê kod odpowiedzialny za: komunikacjê
					z Virtual Qmail, obs³ugê bazy danych, itp.
				</para>
			</formalpara>
			<formalpara>
				<title>./src/com/foo_baz/ihs/mailservice</title>
				<para>
					Wrappery dla obiektów u¿ywanych przez Virtual Qmail.
				</para>
			</formalpara>
			<formalpara>
				<title>./src/com/foo_baz/ihs/backing</title>
				<para>
					Backing beans dla g³ównej czê¶ci systemu.
					Jest to warstwa po¶rednicz±ca miêdzy interfejscem
					u¿ytkownika a j±drem systemu.
				</para>
			</formalpara>
			<formalpara>
				<title>./src/com/foo_baz/ihs/backing/mailservice</title>
				<para>
					Backing beans dla Virtual Qmail.
				</para>
			</formalpara>
			<formalpara>
				<title>./src/com/foo_baz/v_q</title>
				<para>
					Kod generowany automatycznie na podstawie plików IDL
					dostarczanych przez Virtual Qmail.
				</para>
			</formalpara>
			<formalpara>
				<title>./src/com/foo_baz/util</title>
				<para>
					Kod ogólnego przeznaczenia, który mo¿e byæ
					wspó³dzielony z innymi projektami.
				</para>
			</formalpara>
			<formalpara>
				<title>./src/com/corejsf</title>
				<para>
					Kod zaczerpniêty z ksi±¿ki Core JSF.
				</para>
			</formalpara>
			<formalpara>
				<title>./build</title>
				<para>
					Katalog, w którym umieszczane s± pliki wygenerowane 
					podczas kompilacji.
				</para>
			</formalpara>
			<formalpara>
				<title>./pkg</title>
				<para>
					Katalog zawiera pliki niezbêdne do generowania pakietów
					dystrybucyjnych.
				</para>
			</formalpara>
			<formalpara>
				<title>./pkg/rpm</title>
				<para>
					Pliki potrzebne do wygenerowania pakietów RPM.
				</para>
			</formalpara>
			<formalpara>
				<title>./tmp</title>
				<para>
					Miejsce na ró¿ne pliki tymczasowe. Nie podlega
					wersjonowaniu.
				</para>
			</formalpara>
			<formalpara>
				<title>./WebContent</title>
				<para>
					Pliki JSF, pliki graficzne, style CSS, itp.
					Materia³y serwowane przez serwer J2EE.
				</para>
			</formalpara>
			<formalpara>
				<title>./WebContent/mailservice</title>
				<para>
					Interfejs u¿ytkownika obs³uguj±cy backing beans dla
					Virtual Qmail.
				</para>
			</formalpara>
			<formalpara>
				<title>./WebContent/META-INF</title>
				<para>
					Pliki konfiguracyjne dla serwera J2EE.
				</para>
			</formalpara>
			<formalpara>
				<title>./WebContent/WEB-INF</title>
				<para>
					Konfiguracja aplikacji J2EE.
				</para>
			</formalpara>
			<formalpara>
				<title>./WebContent/WEB-INF/lib</title>
				<para>
					Biblioteki niezbêdne do kompilacji.
				</para>
			</formalpara>
		</section>

		<section id="policies.building">
			<title>Kompilacja</title>

			<para>
				Kompilacja jest wyj±tkowo ³atwa, wystarczy w g³ównym katalogu
				wykonaæ polecenie:
			</para>

			<para>
<screen><userinput>ant war</userinput></screen>
				wygeneruje ono w katalog <filename>./build</filename> plik WAR.
			</para>

			<para>
<screen><userinput>ant deploy</userinput></screen>
				spróbuje zainstalowaæ aplikacjê zgodnie z ustawieniami
				zawartymi w pliku <filename>build.properties</filename>.
			</para>

			<para>
<screen><userinput>ant deploy-to-dir</userinput></screen>
				skopiuje pliki do katalogu serwera Tomcat.
			</para>

			<para>
<screen><userinput>ant doc</userinput></screen>
				w katalogu <filename>./doc</filename>
				wygeneruje od nowa dokumentacjê.
			</para>

		</section>

		<section id="policies.packages">
			<title>Tworzenie pakietów</title>
			<para>
				Wykonanie polecenia:
<screen><userinput>ant pkg-rpm</userinput></screen>
				wygeneruje pakiet RPM. 
				<note>
					<para>
						Nale¿y wykonywaæ to polecenie tylko z
						lokalnej kopii repozytorium, poniewa¿ do tworzenia listy plików
						do spakowania u¿ywanie jest polecenie <command>svn export</command>.
					</para>
				</note>
			</para>

			<para>
<screen><userinput>ant pkg-tgz</userinput></screen>
				wygeneruje spakowane archiwum z kodem. 
				<note>
					<para>
						Tak samo jak w przypadku
						polecenia <command>ant pkg-rpm</command> nale¿y je
						wykonywaæ z lokalnej kopii repozytorium.
					</para>
				</note>
			</para>

			<para>
				W przypadku posiadania pakietu TAR/GZ mo¿na bardzo
				³atwo wygenerowaæ pakiety RPM, wystarczy wydaæ
				nastêpuj±ce polecenie:
<screen><userinput>rpmbuild -tb ihs-*.tar.gz</userinput></screen>
			</para>
		</section>
	</section>

	<section id="imp">
		<title>Szczegó³y implementacji IHS</title>

		<section id="imp.core">
			<title>G³ówna czê¶æ systemu</title>
			<figure id="figure.imp.com.foo_baz.ihs">
				<title>Pakiet com.foo_baz.ihs</title>
				<graphic align="center" fileref="../imgs/PackageOverviewcomfoo_bazihs.png" format="PNG"/>
		    </figure>
	
	
			<para>
				G³ówna czê¶æ systemu zawarta jest w pakiecie com.foo_baz.ihs,
				rysunek <xref linkend="figure.imp.com.foo_baz.ihs"/> przedstawia
				zawarte w tym pakiecie elementy. Poni¿ej znajduje siê krótki
				opis ka¿dego z nich.
			</para>

			<formalpara>
				<title>Configuration</title>
				<para>
					Interfejs, za pomoc± którego mo¿na obs³ugiwaæ konfiguracjê
					- dodawaæ, aktualizowaæ czy usuwaæ parametry. Domy¶lnie
					konfiguracja przechowywana jest w bazie danych.
					Interfejs zawiera operacje do obs³ugi podstawowych typów danych.
					Na bazie implementacji tego interfejsu mo¿na stworzyæ obs³ugê opcji konfiguracyjnych
					poszczególnych wtyczek.
					<note>
						<para>
							Do obs³ugi opcji konfiguracyjnych zaleca siê korzystanie z tego interfejsu, odradzane jest
							u¿ywanie w³asnych mechanizmów.
						</para>
					</note>
				</para>
			</formalpara>
			<formalpara>
				<title>Service</title>
				<para>
					Interfejs, który musz± implementowaæ wszystkie
					wtyczki dla systemu IHS. Za jego pomoc± IHS odwo³uje siê
					do wtyczek.
				</para>
			</formalpara>
			<formalpara>
				<title>MailService</title>
				<para>
					Interfejs reprezentuj±cy wtyczkê obs³uguj±ca system
					pocztowy, zawiera on dodatkowe metody, które s±
					niezbêdne do poprawnej obs³ugi takiego systemu.
				</para>
			</formalpara>
			<formalpara>
				<title>Administrators</title>
				<para>
					Interfejs reprezentuj±cy wszystkie mo¿liwe operacje,
					które mo¿na przeprowadzaæ na kontach administratorów.
				</para>
			</formalpara>
			<formalpara>
				<title>IncredibleSystemHosting</title>
				<para>
					G³ówne j±dro systemu, implementuje interfejs Administrators.
					Zajmuje siê do tego obs³ug± wtyczek, dostarcza 
					implementacjê interfejsu Configuration.
				</para>
			</formalpara>
			<formalpara>
				<title>Administrator</title>
				<para>
					Reprezentuje informacje przechowywane o administratorach.
				</para>
			</formalpara>
			<formalpara>
				<title>ExtendedAdministrator</title>
				<para>
					Administrator wzbogacony o dodatkowe informacje 
					u¿ywane przez GUI. Np. czy administrator zosta³ zaznaczony
					przez u¿ytkownika, itp.
				</para>
			</formalpara>
		</section>

		<section id="imp.ui">
			<title>Interfejs u¿ytkownika</title>
			
			<figure id="figure.imp.com.foo_baz.ihs.backing">
				<title>Pakiet com.foo_baz.ihs.backing</title>
				<graphic align="center" fileref="../imgs/PackageOverviewcomfoo_bazihsbacking.png" format="PNG"/>
		    </figure>
	
			<figure id="figure.imp.com.foo_baz.ihs.backing.mailservice">
				<title>Pakiet com.foo_baz.ihs.backing.mailservice</title>
				<graphic align="center" fileref="../imgs/PackageOverviewcomfoo_bazihsbackingmailservice.png" format="PNG"/>
		    </figure>
	
			<para>	
				<xref linkend="figure.imp.com.foo_baz.ihs.backing"/> 
				i <xref linkend="figure.imp.com.foo_baz.ihs.backing.mailservice"/> 
				przedstawiaj± elementy, które po¶rednicz± miêdzy g³ównymi
				czê¶ciami systemu (np. z pakietów com.foo_baz.ihs i com.foo_baz.ihs.mailservice)
				a interfejsem u¿ytkownika reprezentowanym przez strony JSF.
			</para>

			<para>
				Elementy te stanowi± bezpo¶rednie zaplecze stron JSF wykorzystywanych
				przez aplikacjê. Dla przyk³adu strona <filename>addDomain.jsp</filename>
				jest odwzorowywana jako com.foo_baz.ihs.backing.mailservice.AddDomain.
				Wszelkie informacje wpisywane w formularzu s± przekazywane do tej¿e
				klasy.
			</para>	

			<para>
				Klasy zwi±zane bezpo¶rednio z obs³ug± stron (tzn. odpowiadaj±ce
				logicznie stronom) powinny byæ bezstanowe, ich cykl ¿ycia powinien
				byæ zwi±zany tylko i wy³±cznie z pojedynczym ¿±daniem.
			</para>

			<para>
				Logika aplikacji znajduje siê tylko, w niektórych specjalnie
				do tego celu zaprojektowanych elementach. Wiêkszo¶æ z nich
				zwi±zanych jest z sesj± u¿ytkownika. Zawieraj± one stan aplikacji,
				który u¿ywany jest do kontrolowania poszczególnych widoków (stron JSF).
				Dla przyk³adu takimi kontrolerami s± klasy: com.foo_baz.ihs.backing.IncredibleHostingSystemSession,
				com.foo_baz.ihs.backing.mailservice.MailServiceSession. W dalszej czê¶ci
				rozdzia³u znajduje siê osobna sekcja po¶wiêcona zarz±dzaniu
				stanem aplikacji.
			</para>
		</section>

		<section id="imp.state">
			<title>Kontrola stanu systemu</title>

			<para>
				Aby zapewniæ p³ynne zarz±dzanie systemem oraz interakcjê
				z u¿ytkownikiem IHS musi zapamiêtywaæ, niektóre wybory dokonane
				przez u¿ytkownika. Dla przyk³adu: jêzyk w jakim u¿ytkownik
				pragnie komunikowaæ siê z systemem, domenê która aktualnie
				jest przegl±dana przez u¿ytkownika, itp.
			</para>

			<para>
				Niezbêdne jest zapamiêtywanie tych informacji w specjalnie
				do tego celu przeznaczonych obiektach. Pomys³em na
				rozwi±zanie tego problemu mog³oby byæ na przyk³ad wykorzystanie
				ju¿ istniej±cych elementów. Dla przyk³adu skoro chcemy
				zapamiêtywaæ informacje o wybranej domenie, dlaczego nie
				u¿yæ obiektu zwi±zanego ze stron± do wy¶wietlania listy domen?
			</para>

			<para>
				Takie podej¶cie na pocz±tku zdaje siê byæ dobrym rozwi±zaniem.
				Jednak¿e w miarê rozrastania siê aplikacji, oraz interakcji
				miêdzy poszczególnymi elementami zauwa¿yæ mo¿na, ¿e niestety
				rozwi±zanie nie skaluje siê, a wrêcz z czasem prowadzi do problemów.
				Kontynuuj±c przyk³ad z list± domen, za³ó¿my ¿e obiekt stoj±cy 
				za t± list± nazywa siê Domains. Aby móg³ on przechowywaæ informacje
				o wyborze dokonanym przez u¿ytkownika powinien on zostaæ
				zwi±zany z sesj± u¿ytkownika - czyli obiekt taki bêdzie
				istnia³ pomimo przechodzenia i powracania do strony
				z list± domen.
			</para>

			<para>
				Przyjmijmy teraz, ¿e na li¶cie domen mo¿na wykonywaæ jakie¶
				operacje, dla przyk³adu usuwaæ u¿ytkowników. Nale¿y w zwi±zku
				z tym zarz±dzaæ b³êdami, nale¿y stworzyæ odpowiednie pole 
				wykorzystywane do prezentacji rezultatu.			
			</para>

			<para>
				Za³ó¿my teraz, ¿e u¿ytkownik usun±³ kilka domen, pojawi³
				siê komunikat o poprawnym wykonaniu operacji. Nastêpnie u¿ytkownik
				przechodzi do innych stron, po czym wraca do tej samej listy
				i znów widzi komunikat. Dzieje siê tak dlatego, ¿e obiekt
				zwi±zany jest z sesj±, nie zosta³ on usuniêty po wykonaniu
				operacji. W zwi±zku z tym opracowaæ nale¿y jaki¶ mechanizm
				resetowania pola z komunikatem. Ca³a klasa stoj±ca za tym
				obiektem siê komplikuje. W przypadku wiêkszej ilo¶ci pól,
				lub bardziej z³o¿onych operacji ro¶nie ilo¶æ poprawek, które
				trzeba nanosiæ na taki obiekt. Obiektów wraz ze stronami przybywa,
				niektóre zaczynaj± duplikowaæ niektóre informacje. W koñcu
				system trudno obj±æ poniewa¿ istnieje tyle interakcji i zale¿no¶ci
				miêdzy obiektami.
			</para>

			<para>
				Du¿o ³atwiej odseparowaæ czê¶æ zwi±zan± z logik± i stanem
				aplikacji w wyspecjalizowane klasy i obiekty. Najlepiej
				tylko jeden dla ca³ej aplikacji, ewentualnie pojedyncze obiekty
				zwi±zane z poszczególnymi wtyczkami.
			</para>

			<para>
				Takie podej¶cie powoduje, ¿e ³atwo tworzyæ klasy odpowiedzialne
				za poszczególne strony. £atwo równie¿ zauwa¿yæ, które elementy
				wp³ywaj± na ca³± aplikacjê, jak s± one od siebie zale¿ne.
				Poniewa¿ znajduj± siê one w wyra¼nie wyodrêbnionych sekcjach
				³atwiej nimi zarz±dzaæ.
			</para>

			<para>
				Aktualnie g³ównym obiektem, który zajmuje siê
				zarz±dzaniem aplikacj± jest bean o nazwie ihs. Jest on
				instancj± klasy com.foo_baz.ihs.backing.IncredibleSystemHostingSession.
			</para>
		</section>

		<section id="imp.plugins">
			<title>Wtyczki</title>
			
			<para>
				Poni¿ej znajduje siê lista wtyczek instalowanych wraz
				z IHS.
			</para>

			<section id="imp.plugins.v_q">
				<title>VirtualQmailMailService</title>

				<para>
					Implementacja interfejsu MailService, która oparta
					jest o system Virtual Qmail. Komunikacja odbywa siê
					za pomoc± us³ug dostêpnych poprzez CORBA.
				</para>

				<para>
					Pliki znajduj±ce siê w pakiecie com.foo_baz.ihs.mailservice
					oraz com.foo_baz.ihs.VirtualQmailMailService odpowiedzialne
					s± za interakcjê z systemem Virtual Qmail. Pakiet
					com.foo_baz.ihs.backing.mailservice 
					po¶redniczy w obs³udze interfejsu u¿ytkownika.
					Interfejs u¿ytkownika obs³ugiwany jest przez strony
					JSF znajduj±ce siê w katalogu <filename>mailserver</filename>.
				</para>
			</section>
		</section>
	</section>
</chapter>

